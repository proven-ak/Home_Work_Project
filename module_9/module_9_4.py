# Задание по теме "Создание функций на лету"

# Ваша задача:
# Цель: освоить на практике замыкание, объекты-функторы и lambda-функции.

# Задача "Функциональное разнообразие":
# Lambda-функция:
# Даны 2 строки:

first = 'Мама мыла раму'
second = 'Рамена мало было'

# Длина строк разная
# print(len(first), len(second))

# Функция для сравнения двух строк
result = list(map(lambda f, s: f == s, first, second))
print(result)

# Необходимо составить lambda-функцию для следующего выражения - list(map(?, first, second)).
# Здесь ? - место написания lambda-функции.

# Результатом должен быть список совпадения букв в той же позиции:
# [False, True, True, False, False, False, False, False, True, False, False, False, False, False]
# Где True - совпало, False - не совпало.

# -------------------------------

# Замыкание:
# Напишите функцию get_advanced_writer(file_name), принимающую
# Внутри этой функции, напишите ещё одну - write_everything(*data_set),
# где *data_set - параметр принимающий неограниченное количество данных любого типа.
# Логика write_everything заключается в добавлении в фай название файла для записи.л file_name всех данных из data_set
# в том же виде.
# Функция get_advanced_writer возвращает функцию write_everything.


# Функция get_advanced_writer принимает название файла для записи.
def get_advanced_writer(file_name):     # file_name - название файла для записи

    # Функция добавляет в файл file_name все данные из data_set
    def write_everything(*data_set):    # *data_set - параметр принимающий неограниченное количество данных любого типа.






# Данный код:
write = get_advanced_writer('example.txt')
write('Это строчка', ['А', 'это', 'уже', 'число', 5, 'в', 'списке'])

# Запишет данные в файл в таком виде:
# Метод __call__:
# Создайте класс MysticBall, объекты которого обладают атрибутом words хранящий коллекцию строк.
# В этом классе также определите метод __call__ который будет случайным образом выбирать слово из words и возвращать его. Для случайного выбора с одинаковой вероятностью для каждого данного в коллекции можете использовать функцию choice из модуля random.

# Ваш код (количество слов для случайного выбора может быть другое):

from random import choice
# Ваш класс здесь

# first_ball = MysticBall('Да', 'Нет', 'Наверное')
# print(first_ball())
# print(first_ball())
# print(first_ball())

# Примерный результат (может отличаться из-за случайности выбора):
# Да
# Да
# Наверное

# Примечания:
# Все задания пишутся в одном модуле.
# Передаваемые данные в функции и объекты можете использовать свои, главное,
# чтобы ваш код полноценно демонстрировал логику написанного.
