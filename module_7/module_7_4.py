# Задание:
# Создайте новый проект или продолжите работу в текущем проекте.
# Напишите код, который форматирует строки для следующих сценариев.
# Укажите переменные, которые должны быть вставлены в каждую строку:

# Входные данные:
team1_num = 5                   # Количество участников команды 1
team2_num = 6                   # Количество участников команды 2
score_1 = 40                    # количество задач решённых командой 1
score_2 = 42                    # количество задач решённых командой 2
team1_time = 1552.512           # время за которое команда 1 решила задачи
team2_time = 2153.31451         # время за которое команда 2 решила задачи
tasks_total = 82                # количество задач
time_avg = 45.2                 # среднее время решения
challenge_result = ""           # исход соревнования


# Использование %:
# 1. Количество участников первой команды
team1_string = "В команде Мастера кода участников: %d !" % team1_num

# 2. Строка с количеством участников в обеих командах
teams_string = "Итого сегодня в командах участников: %d и %d !" % (team1_num, team2_num)

# Использование format():
# 3. Количество задач решённых командой 2 (score_2).
score_2_string = "Команда Волшебники данных решила задач: {} !".format(score_2)

# Переменные: время за которое команда 2 решила задачи (team1_time).
# Пример итоговой строки: "Волшебники данных решили задачи за 18015.2 с !"
#
# Использование f-строк:
#
# Переменные: количество решённых задач по командам: score_1, score_2
# Пример итоговой строки: "Команды решили 40 и 42 задач.”
#
# Переменные: исход соревнования (challenge_result).
# Пример итоговой строки: "Результат битвы: победа команды Мастера кода!"
#
# Переменные: количество задач (tasks_total) и среднее время решения (time_avg).
# Пример итоговой строки: "Сегодня было решено 82 задач, в среднем по 350.4 секунды на задачу!."
#
# Комментарии к заданию:
#
# В русском языке окончания слов меняются (1 участник, 2 участника),
# пока что давайте не обращать на это внимания.
# Переменные challenge_result, tasks_total, time_avg можно задать вручную или рассчитать.
# На пример, для challenge_result:
#
    # if score_1 > score_2 or score_1 == score_2 and team1_time > team2_time:
    #   result = ‘Победа команды Мастера кода!’
    # elif score_1 < score_2 or score_1 == score_2 and team1_time < team2_time:
    #   result = ‘Победа команды Волшебники Данных!’
    # else:
    #   result = ‘Ничья!’

# Вывод результатов
print(team1_string)
print(teams_string)
print(score_2_string)