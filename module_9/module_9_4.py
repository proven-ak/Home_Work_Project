# Задание по теме "Создание функций на лету"

# 1. Lambda-функция
# Цель: Реализовать выражение list(map(lambda_func, first, second)),
# чтобы получить список совпадений символов двух строк.

# Даны 2 строки:
first = 'Мама мыла раму'
second = 'Рамена мало было'

# Длина строк разная
# print(len(first), len(second))

# lambda-функция для сравнения двух строк должен быть список совпадения букв в той же позиции
# Где True - совпало, False - не совпало.

# Вывод на консоль:
# [False, True, True, False, False, False, False, False, True, False, False, False, False, False]

#############################################

# 2. Замыкание
# Цель: Реализовать функцию get_advanced_writer(file_name) с вложенной
# функцией write_everything(*data_set).

# Функция get_advanced_writer принимает название файла для записи.

    # Функция добавляет в файл file_name все данные из data_set - параметр принимающий
    # неограниченное количество данных любого типа.

    # Открытие файла для добавления записей.

    # Запись переданных данных(включая списки и строки) в файл построчно.

    # Возврат вложенной функции write_everything из get_advanced_writer


# Тест код:
write = get_advanced_writer('example.txt')
write('Это строчка', ['А', 'это', 'уже', 'число', 5, 'в', 'списке'])

#############################################

# 3. Метод __call__

# Цель: Реализовать класс MysticBall с функционалом случайного выбора слова
# из списка при вызове объекта.

# Создание класса MysticBall.

# Определение атрибута words для хранения списка строк, переданных при создании объекта.

# Создание метода __call__, который использует функцию choice из модуля random
# для случайного выбора элемента из words.

# Создание объекта MysticBall с набором строк. Возвращает выбранное слово.

from random import choice

#
# first_ball = MysticBall('Да', 'Нет', 'Наверное')
# print(first_ball())
# print(first_ball())
# print(first_ball())

# Примерный результат (может отличаться из-за случайности выбора):
# Да
# Да
# Наверное

# Примечания:
# Все задания пишутся в одном модуле.
# Передаваемые данные в функции и объекты можете использовать свои, главное,
# чтобы ваш код полноценно демонстрировал логику написанного.
